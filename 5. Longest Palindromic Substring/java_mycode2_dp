class Solution {
    public String longestPalindrome(String s) {
        if (s.length() == 0 || s == null){
            return "";
        }
        int start = 0;
        int end = 0;
        boolean[][] dp = new boolean[s.length()][s.length()];
        for (int len = 0; len < s.length(); len++){
            for (int i = 0, j = len; j < s.length(); i++,j++){
                if (len == 0){
                    dp[i][j] = true;
                }else if(len == 1){
                    if (s.charAt(i) == s.charAt(j)){
                        dp[i][j] = true;
                    }else{
                        dp[i][j] = false;
                    }
                }else{
                    if (s.charAt(i) == s.charAt(j)){
                        dp[i][j] = dp[i + 1][j - 1];
                    }else{
                        dp[i][j] = false;
                    }
                }
                if (dp[i][j]){
                    start = i;
                    end = j;
                }
            }
        }
        return s.substring(start, end + 1);
        
    }
    
}
