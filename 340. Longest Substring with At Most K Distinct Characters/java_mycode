class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        if (k == 0){
            return 0;
        }
        int ans = 0;
        int i = 0;
        int j = 0;
        int count = 0;
        Map<Character, Integer> map = new HashMap<>();
        while (j < s.length()){
            map.put(s.charAt(j), j);
            j++;
            if (map.size() > k){
                int min = Integer.MAX_VALUE;
                char c = '.';
                for (Character ch: map.keySet()){
                    if (map.get(ch) < min){
                        c = ch;
                        min = map.get(ch);
                    }
                }
                map.remove(c);
                
                i = min + 1;
            }
            ans = Math.max(ans, j - i);
        }
        return ans;
    }
}
