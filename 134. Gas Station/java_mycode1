class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        int start = 0;
        int sum = 0;
        
        for (int j = 0; j < gas.length; j++){
            boolean check = true;
            if (gas[j] >= cost[j]){
                start = j;
                sum = gas[start];
                for (int i = start + 1; i < gas.length; i++){
                    if (sum < cost[i - 1]){
                        sum = 0;
                        check = false;
                        break;
                    }else{
                        sum += gas[i] - cost[i - 1];
                    }
                }
                if (check){
                    for (int i = 0; i < start; i++){
                    
                        if (i == 0){
                            if (sum < cost[gas.length - 1]){
                                sum = 0;
                                check = false;
                                break;
                            }else{
                                sum += gas[i] - cost[gas.length - 1];
                            }
                        }else{
                            if (sum < cost[i - 1]){
                                sum = 0;
                                check = false;
                            }else{
                                sum += gas[i] - cost[i - 1];
                            }
                        }
                    }
                }
                if (start != 0){
                    if (sum >= cost[start - 1] && check){
                        return start;
                    }
                }else{
                    if (sum >= cost[gas.length - 1] && check){
                        return start;
                    }
                }
                
            }
        }
        return -1;
    }
}
