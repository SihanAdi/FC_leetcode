class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        HashMap<Integer, List<Integer>> map = new HashMap<>();
        int[] degree = new int[numCourses];
        int[] ans = new int[numCourses];
        for (int[] arr : prerequisites){
            if (map.containsKey(arr[1])){
                map.get(arr[1]).add(arr[0]);
            }else{
                List<Integer> tmp = new LinkedList<>();
                tmp.add(arr[0]);
                map.put(arr[1], tmp);
            }
            degree[arr[0]] += 1;
        }
        Queue<Integer> q = new LinkedList<>();
        for (int i = 0; i < numCourses; i++){
            if (degree[i] == 0){
                q.add(i);
            }
        }
        int i = 0;
        while (!q.isEmpty()){
            int n = q.remove();
            ans[i++] = n;
            if (map.containsKey(n)){
                for (Integer k : map.get(n)){
                    degree[k] -= 1;
                    if (degree[k] == 0){
                        q.add(k);
                    }
                }
            }
        }
        if (i == numCourses){
            return ans;
        }else{
            return new int[0];
        }
    }
}
