/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max;
    public int maxPathSum(TreeNode root) {
        if (root == null){
            return 0;
        }
        if (root.right == null && root.left == null){
            return root.val;
        }
        max = Integer.MIN_VALUE;
        
        path(root);
        
        return max;
        
    }
    public int path(TreeNode root){
        if (root == null){
            return 0;
        }
        
        int l = Math.max(0, path(root.left));
        int r = Math.max(0, path(root.right));
        
        int sum = root.val + l + r;
        max = Math.max(max, sum);
        
            
        
        
        return root.val + Math.max(l, r);
    }
}
