class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        ArrayList<List<Integer>> ans = new ArrayList<List<Integer>>();
        for (int i = 0; i < nums.length && nums[i] <= 0; i++){
            if (i == 0 || nums[i] != nums[i - 1]){
                find (nums, i, ans);
            }
        } 
        return ans;
    }
    void find (int[] nums, int i, List<List<Integer>> ans){
        HashSet<Integer> set = new HashSet<Integer>();
        for (int j = i + 1; j < nums.length; j++){
            int sum = - nums[i] - nums[j];
            if (set.contains(sum)){
                ans.add(Arrays.asList(nums[i], nums[j], sum));
                while(j + 1 < nums.length && nums[j] == nums[j + 1]){
                    j++;
                }
            }
            set.add(nums[j]);
        }
    }
}
