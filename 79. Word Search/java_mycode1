class Solution {
    private char[][] board;
    private int m;
    private int n;
    public boolean exist(char[][] board, String word) {
        this.board = board;
        this.m = board.length;
        this.n = board[0].length;
        for (int i = 0; i < m; i++){
            for (int j = 0; j < n; j++){
                if (bc(i, j, word, 0)){
                    return true;
                }
            }
        }
        return false;
    }
    public boolean bc (int i, int j, String word, int index){
        if (index >= word.length()){
            return true;
        }
        if (i < 0 || j < 0 || i >= this.m || j >= this.n || this.board[i][j] != word.charAt(index)){
            return false;
        }
        this.board[i][j] = '*';
        if (bc(i + 1, j, word, index + 1)){
            this.board[i][j] = word.charAt(index);
            return true;
        }else if (bc(i - 1, j, word, index + 1)){
            this.board[i][j] = word.charAt(index);
            return true;
        }else if (bc(i, j + 1, word, index + 1)){
            this.board[i][j] = word.charAt(index);
            return true;
        }else if (bc(i, j - 1, word, index + 1)){
            this.board[i][j] = word.charAt(index);
            return true;
        }else{
            this.board[i][j] = word.charAt(index);
            return false;
        }
    }
}
