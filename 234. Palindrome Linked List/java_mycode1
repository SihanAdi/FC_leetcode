/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        LinkedList<Integer> list = new LinkedList<>();
        
        while (head != null){
            list.add(head.val);
            head = head.next;
        }
        int i = 0;
        int j = list.size() - 1;
        while (i <= j){
            if (i == j){
                i++;
                j--;
            }else{
                if (list.removeFirst() != list.removeLast()){
                    return false;
                }else{
                    i++;
                    j--;
                }
            }
        }
        return true;
    }
}
