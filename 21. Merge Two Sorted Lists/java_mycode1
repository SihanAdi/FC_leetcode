/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if (list1 == null && list2 == null){
            return null;
        }else if (list1 == null && list2 != null){
            return list2;
        }else if (list1 != null && list2 == null){
            return list1;
        }
        ListNode head = new ListNode(0);
        ListNode tmp = head;
        while (list1 != null && list2 != null){
            if (list1.val <= list2.val){
                ListNode node = new ListNode(list1.val);
                tmp.next = node;
                list1 = list1.next;
            }else{
                ListNode node = new ListNode(list2.val);
                tmp.next = node;
                list2 = list2.next;

            }
            tmp = tmp.next;
        }
        tmp.next = list1 != null ? list1 : list2;
        return head.next;
    }
}
