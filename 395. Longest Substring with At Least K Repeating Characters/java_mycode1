class Solution {
    int ans = 0;
    public int longestSubstring(String s, int k) {
        for (int i = 0; i <= s.length() - k; i++){
            if (s.length() - i <= ans){
                break;
            }
            bc(s, k, new HashMap<Character, Integer>(), i, 0, 0);
        }
        return ans;
    }
    public void bc (String s, int k, HashMap<Character, Integer> map, int i, int count, int len){
        if (i >= s.length()){
            return;
        }
        len++;
        map.put(s.charAt(i), map.getOrDefault(s.charAt(i), 0) + 1);
        if (map.get(s.charAt(i)) == k){
            count++;
        }
        if (count == map.size()){
            ans = Math.max(ans, len);
        }
        bc(s, k, map, i + 1, count, len);
    }
}
