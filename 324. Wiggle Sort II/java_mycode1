class Solution {
    
    public void wiggleSort(int[] nums) {
        if (nums.length <= 1) return;
        Arrays.sort(nums); //O(nlogN)

        int left = (nums.length - 1) / 2 ;
        swap(nums,0,left);
        for (int i = 1; i < nums.length; i++)
            swap(nums, i, nums.length-1);
    }

    private void swap(int[] nums, int left, int right){
        while (left < right){
            int t = nums[left];
            nums[left++] = nums[right];
            nums[right--] = t;
        }
    }
//         if (nums.length == 1){
//             return;
//         }
        
        
//         Arrays.sort(nums);
//         int c = nums[0];
//         nums[i] = nums[(nums.length - 1) / 2];
//         nums[(nums.length - 1) / 2] = c;
//         for (int i = 1; i < nums.length; i++){
//             int c = nums[0];
//             nums[i] = nums[(nums.length - 1) / 2];
//             nums[(nums.length - 1) / 2] = c;
//         }
        // int i = 1;
        // int j = nums.length - 1;
        // LinkedList<Integer> list = new LinkedList<>();
        // list.add()
        // while (i < j){
        //     list.add(nums[i]);
        //     list.add(nums[j]);
        //     i++;
        //     j--;
        // }
        // i = 0;
        // for (Integer n : list){
        //     nums[i] = n;
        //     i++;
        // }
        
            
//         int i = 1;
//         while (i < nums.length){
//             if (i % 2 != 0){
//                 if (nums[i] < nums[i - 1]){
//                     int c = nums[i];
//                     nums[i] = nums[i - 1];
//                     nums[i - 1] = c;
//                 }else if (nums[i] == nums[i - 1]){
                    
//                 }
//                 if (i + 1 < nums.length){
//                     if (nums[i] < nums[i + 1]){
//                         int c = nums[i];
//                         nums[i] = nums[i + 1];
//                         nums[i + 1] = c;
//                     }
//                 }
//             }
//             i += 2;
//         }
    // 
}
